{
	"nodes":[
		{"id":"1e763cdd50d1a0b8","type":"group","x":-1360,"y":-920,"width":1071,"height":1179,"label":"Add Node"},
		{"id":"ec8f96acda0edb0f","type":"file","file":"1 - Rough Notes/Pasted image 20240909153215.png","x":-1240,"y":-240,"width":400,"height":399},
		{"id":"f19f637bac20e878","type":"text","text":"## Getting Data from the Database","x":-1047,"y":604,"width":327,"height":113},
		{"id":"033d1d2294aa5b4a","type":"text","text":"We need to have a backend API to manage requests for data in the front end. Should come with a swagger document in any case. Should have a cached materialized view of each Nodes most important Kpi's that are refreshed every 10 minutes.\n\nWe'll just stick to api get requests:\n\nGET api/node/kpis?name=\"AFO160\"\n\nAny data that","x":-1500,"y":760,"width":453,"height":620},
		{"id":"b14c5bbbfc86ddac","type":"text","text":"Most machines would have a pc attached to it to run programs and view performance of the machine or at least a pc station that workers would use to log performance. We can try finding a way to stream performance data being logged. Could have a c++ script running on each machine send performance data being uploaded to a folder on each pc to a database.\n\nEither way connecting to a pc is a good way to check if we are currently connected to a PC or not to see if it's live. Since telling if a pc is on or not from a database is really hard otherwise due to holiday's, weekends, maintenance etc.","x":474,"y":678,"width":566,"height":442},
		{"id":"e813e1091408a837","type":"text","text":"## Add Machine to Network","x":-238,"y":674,"width":438,"height":86},
		{"id":"bdcaf6987584eb78","type":"file","file":"1 - Rough Notes/SPP Digital Twin.md","x":-840,"y":-800,"width":400,"height":400},
		{"id":"9739b741ed1a5751","type":"text","text":"## Add Node/Machines","x":-600,"y":-365,"width":300,"height":125},
		{"id":"810bc9dd29994b37","type":"text","text":"#### Requirements for a Node\n\nFor a node, the requirements are:\n\n- Name\n- Purpose of Machine\n- Parent Node\n- Automated or Manual\n- List of KPI's relevant to that machine\n- Data source for that node (PC Name, )","x":-1290,"y":-681,"width":466,"height":379},
		{"id":"c4b09ba7de23bf8f","type":"file","file":"1 - Rough Notes/Pasted image 20240909153131.png","x":-720,"y":-160,"width":400,"height":399},
		{"id":"ca16a05dd499a6ef","type":"text","text":"#### Log scraper to read log Files\n\nProbably best to have a script that reads from a log file, cleans it and uploads it to a postgres database. Just uploads the raw data to  a database","x":-300,"y":859,"width":700,"height":261},
		{"id":"8a477bbb3118d1a0","type":"text","text":"#### Example Plant: Somerville Reservoir\n\nA water Treatment factory that starts with importing sewage water, screening thick sediment, allowing it to settle in large vats so larger particles fall to the bottom are removed and oil and grease is skimmed from the top. Second filter process and chemical treatment is removed.\nWaste is condensed and concentrated to solids to be taken to landfills or incinerated\n","x":-780,"y":1263,"width":1040,"height":237},
		{"id":"ff4c337390484707","type":"text","text":"## Technical Overview\n\nPostgres\nExpress JS\nAngular JS\nNode JS\n\nTypescript\n\nJust for Convenience by having 1 language across the text stack and npm package support.\n\nIt will use a postgres database to handle running the main aspects of the site, whether that be session data, login and passwords, access rights as well as by default where most of the data from the database will come from and be stored to.  Such as for \n\nIt will use the npm packages for different data source technologies like Web Sockets, Kafka, AWS etc,  to handle pulling data from these systems for the \nfinal application.\n\nThe main functionalities will need to be:\n\n- The Query Builder, both the technology used to build queries as well as actually connecting to each of those data sources in a effective and secure way both in terms of pooling, opening and closing connection, storing credentials in a safe and secure manner etc.\n- The Page editor, requires a bit of a complicated access and management of both the iframe of the editing page but as well as page management, configuring session data, the actual chartjs and d3js editor. Managing the optional and mandatory requirements of the query.\n- \n\n","x":635,"y":1555,"width":1405,"height":905},
		{"id":"e9f4f5ce86a3c223","type":"text","text":"## Viewing Map\n","x":519,"y":-263,"width":261,"height":83},
		{"id":"130242b79c1011d7","type":"file","file":"attachments/Pasted image 20250112104332.webp","x":-419,"y":-1427,"width":400,"height":222},
		{"id":"f7896c0c4945d12a","type":"file","file":"1 - Rough Notes/Pasted image 20240909153528.png","x":-80,"y":-1293,"width":520,"height":693},
		{"id":"d4f023baa5a408a0","type":"file","file":"1 - Rough Notes/Pasted image 20240909153502.png","x":449,"y":-1205,"width":864,"height":685},
		{"id":"7cc337ec34cb9493","type":"text","text":"# Main Features\n\nHigh Priority\n--\n- A mix of  KPI's. All stations will have some shared KPI's (count, throughput, OK, Nok Count etc.) as well as a few unique KPI's for that given machine( this can be simple, like the amount of tools near broken, or total error time in the last 24 hours etc.). These KPI's must either be readily available in the tool tip or elsewhere in the page.\n- There must a functional 2D map that demonstrates each node of the dataset in a bubble graph format. Each node should be selectable and open a tooltip, that contains 3-4 of the most important KPI's for that station. \n- There should be at least 3 pages, the Home Page, the overall analytics page and a about page that covers what the goal of the project is. **DONE**\n- There should be at least 8 unique KPI's with at least 2 KPI's that are unique to a single machine. These KPI's would only be visible on the tool tip.\n- The analytics page should be able to show Realtime KPI data and values. The Kpi Cards and the tool tips, as well as pinging of the corresponding nodes should help signify this.\n- I want to at least implement 2 Chartjs graphs, Line graph and Bar graph just to signify it's capability of being able to be used for data analytics\n- There should also be a settings page. This should have an option for database connections, just with a simple form asking what database this app using, size requirements, admin credential details. Just to signify how this would all work and this would connect to the infrastructure on the client side.\n\nMedium Priority\n-- \n- The 2d map should specify the current status of the node, whether it be currently running, error, idle, maintenance, unknown etc.\n- Clicking a given node on the graph will filter the page to only give data for that node clicked on. There will also be a title that will appear below to specify what data is being clicked on at that given time\n- The 2d Map is a able to go full screen.\n- The 2d Map is , with the help of a web socket able to show a flow of current data entering each station.\n- The 2d Map is able to be dragged across and zoomed into. \n- The 2d Map nodes can be dragged to a position and be set as that position for the future when ever it's used again\n- The 2d Map's size of nodes can be based on the amount of data they have.\n\nLow Priority\n-- \n- An Admin and user login system. With simple user's not being able to change any features\n- The 2d map can be customised by the user, either based on changing the size of the nodes, or by adding a custom map and assigning the nodes to each entity on there, by allowing them to drag and drop nodes on to it, or paint where the values should be","x":960,"y":-1100,"width":1105,"height":1470},
		{"id":"bf25a3169d91ce35","type":"text","text":"# SPP Digital Twin","x":-80,"y":-400,"width":380,"height":160,"color":"#ffffff"}
	],
	"edges":[
		{"id":"c835ffa44dde30d9","fromNode":"bf25a3169d91ce35","fromSide":"left","toNode":"9739b741ed1a5751","toSide":"right"},
		{"id":"e3e4ca20945408e8","fromNode":"bf25a3169d91ce35","fromSide":"right","toNode":"e9f4f5ce86a3c223","toSide":"left"},
		{"id":"e87f34e853915b99","fromNode":"bf25a3169d91ce35","fromSide":"bottom","toNode":"e813e1091408a837","toSide":"top"},
		{"id":"5da56aeca73e605f","fromNode":"e813e1091408a837","fromSide":"right","toNode":"b14c5bbbfc86ddac","toSide":"left"},
		{"id":"93530bd96933d2a1","fromNode":"bf25a3169d91ce35","fromSide":"bottom","toNode":"f19f637bac20e878","toSide":"top"}
	]
}